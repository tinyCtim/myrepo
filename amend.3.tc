#include pps/lrblib.tc
#include pps/library.tc

// made modern tinyC compliant - 5/14/23
// this works under an ANSI terminal

prime int p [return(factor(p)==p)]

factor int f [
 int p(42),j
 p(0)=2;p(1)=3;p(2)=5;p(3)=7;p(4)=11;p(5)=13
 p(6)=17;p(7)=19;p(8)=23;p(9)=29;p(10)=31
 p(11)=37;p(12)=41;p(13)=43;p(14)=47;p(15)=53
 p(16)=59;p(17)=61;p(18)=67;p(19)=71
 p(20)=73;p(21)=79;p(22)=83;p(23)=89
 p(24)=97;p(25)=101;p(26)=103;p(27)=107
 p(28)=109;p(29)=113;p(30)=127;p(31)=131
 p(32)=137;p(33)=139;p(34)=149;p(35)=151
 p(36)=157;p(37)=163;p(38)=167;p(39)=173
 p(40)=179;p(41)=181;p(42)=191
 while j<=42 [
  if f%p(j)==0 return p(j)
  j=j+1
  ]
 return f
 ]

// amend.3.tc - tct - 10/19/24

main [
 int amend(200),v(0),m,n,c,i,tc
 char aft(1000),crlf(2);crlf(0)=13;crlf(1)=10
 char cs(30);strcpy cs,"green magenta red yellow "
 int colors(3);split(colors,cs," ")
 char colorsc(3);colorsc(0)='2';colorsc(1)='5';colorsc(2)='1';colorsc(3)='3'
 int primes(2);primes(0)=13;primes(1)=17;primes(2)=19
 readfile("saf.crlf.txt",aft,1000)
 m=split(amend,aft,crlf)
 pl "amend.3.tc - lrb - 10/19/24";pl ""
 pl "please visit http://primepuzzle.com/tc/amend.html"
 while i<4 [
  pl "";color(colorsc(i));pl colors(i);pl "";pl ""
  n=m;c=0
  while n [
   atoi(amend(n-1),v)
   if i<3 [
    if (v(0)%primes(i)==0) [c=c+1;MC v(0),14;ps " "]
    ]
   else [
    if prime(v(0)) [c=c+1;MC v(0),14;ps " "]
    ]
   if ((c!=0)*(c%17==0)) [tc=tc+c;pl "";c=0]
   n=n-1
   ]
   tc=tc+c
   i=i+1
  ]
  pl "";pl "";color('7')
  if tc==m [MC m,14;ps " numbers processed."]
  else [MC m-tc,14;ps " number(s) not processed."]
  pl ""
 ]
